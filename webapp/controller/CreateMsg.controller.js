sap.ui.define(
  [
    "sap/ui/core/mvc/Controller",
    "sap/ui/model/odata/v2/ODataModel",
    "sap/m/UploadCollectionParameter",
    "sap/ui/model/json/JSONModel",
    "z_tech_appeal/controller/BaseController",
    "z_tech_appeal/controller/ZodataAjaxUploader",
    //  "sap/m/MessageToast"
  ],
  function (
    Controller,
    ODataModel,
    UploadCollectionParameter,
    JSONModel,
    BaseController,
    zodataajax
    //, MessageToast
  ) {
    "use strict";
    return BaseController.extend("z_tech_appeal.controller.CreateMsg", {
      /**
       * Called when a controller is instantiated and its View controls (if available) are already created.
       * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.
       * @memberOf Z_MSG_TECHV1.Z_MSG_TECH_V1.view.view.CreateMsg
       */
      zodataajax: zodataajax,

      onInit: function () {
        //var msg = "asas";
        // console.log(msg);
        //  MessageToast.show(msg);
        var oViewModel = new JSONModel({
          busy: false,
          delay: 0,
          messsageType: 'T'
        });
        var oDetailView = new sap.ui.model.json.JSONModel();

        this.setModel(oViewModel, "CreateMsgHeaderView");
        this.setModel(oDetailView, "DetailData");
        
        // this.getRouter().getRoute("newmsg").attachPatternMatched(this._onMatched, this);
        this.getOwnerComponent()
          .getRouter()
          .getRoute("newmsg")
          .attachPatternMatched(this._onMatched, this);

        this._oValueHelpFileIdColumnModel = this.getModel('ValueHelpFileIdColumnModel')
        this._oValueHelpKndColumnModel = this.getModel('ValueHelpKndColumnModel');
      }, //,
      /**
       * Similar to onAfterRendering, but this hook is invoked before the controller's View is re-rendered
       * (NOT before the first rendering! onInit() is used for that one!).
       * @memberOf Z_MSG_TECHV1.Z_MSG_TECH_V1.view.view.CreateMsg
       */
      //  onBeforeRendering: function() {
      //
      //  },
      /**
       * Called when the View has been rendered (so its HTML is part of the document). Post-rendering manipulations of the HTML could be done here.
       * This hook is the same one that SAPUI5 controls get after being rendered.
       * @memberOf Z_MSG_TECHV1.Z_MSG_TECH_V1.view.view.CreateMsg
       */
      //  onAfterRendering: function() {
      //
      //  },
      /**
       * Called when the Controller is destroyed. Use this one to free resources and finalize activities.
       * @memberOf Z_MSG_TECHV1.Z_MSG_TECH_V1.view.view.CreateMsg
       */
      //  onExit: function() {
      //
      //  }

      _onMatched: function (oEvent) {
        var oMsgArea = this.byId("MsgTextArea");
        oMsgArea.setValue("");

        var oUploadCollection = this.byId("UploadCollection");
        oUploadCollection.removeAllItems();

        this._CreateMsgHeaderViewModel = this.getView().getModel(
          "CreateMsgHeaderView"
        );

        this._fillTypeTechModel();
        this._fillTypeBukrsModel();
        this._fillNalogTaxModel();
        // this._fillRepListModel();

        // zodataajax.PingFunc("Tests Zodata from Create");

        if (oEvent.getParameter("arguments").MsgId !== "0" ){
          this._setFieldsBasedOn( oEvent.getParameter("arguments").MsgId.toString() );
        }

      },

      _setFieldsBasedOn: function (vmsgId) {
        if (!vmsgId) {
          return;
        }

        this.getModel("CreateMsgHeaderView").setProperty("/messsageType",'F');
        this.byId("ComboMessageType").setEnabled(false);

        var oView = this.getView();

        var oModel = new sap.ui.model.json.JSONModel();
        oModel.setDefaultBindingMode(sap.ui.model.BindingMode.OneWay);
        var vMsgId = "('" + vmsgId.toString() + "')";
        var odataDetailData =
          "/sap/opu/odata/SAP/ZTC_MSGTECH_GTW_SRV/TechMsgDetailSet" +
          vMsgId;

        oModel.loadData(odataDetailData, "local", true, "GET", true);

        oModel.attachRequestCompleted(this, function (oEv) {
          oView.setModel(oModel, "DetailData");           
        });
      },

      /**
       *@memberOf Z_MSG_TECHV1.Z_MSG_TECH_V1.controller.CreateMsg
       */
      _onCreateMsg: function (oEvent) {
        //This code was generated by the layout editor.
        var mParameters = {
          headers: {
            "Content-ID": "102",
          },
          useBatch: true,
        };
        var oModel = new ODataModel(
          "/sap/opu/odata/sap/ZTC_SUPPORT_HDR_C_CDS/",
          mParameters
        );

        var tmp = {
          Message_Type: "T",
        };
        oModel.create("/ZTC_SUPPORT_HDR_C_CDS", tmp);

        oModel.attachRequestCompleted(this, function (oEv) {
          sap.m.MessageToast.show("Success - CDS");
        });

        oModel.attachRequestFailed(this, function (oEv) {
          sap.m.MessageToast.show("Failure - CDS");
        });
      },

      _onSaveViaSrv: function (oEvent) {
        var mParameters = {
          headers: {
            "Content-ID": "102",
          },
          useBatch: true,
        };
        var oModel = new ODataModel(
          "/sap/opu/odata/sap/ZTC_SUPPORT_SRV",
          mParameters
        );

        var tmp = {
          Message_Type: "T",
        };
        oModel.create("/HeaderSet", tmp);

        oModel.attachRequestCompleted(this, function (oEv) {
          sap.m.MessageToast.show("Success - CDS");
        });

        oModel.attachRequestFailed(this, function (oEv) {
          sap.m.MessageToast.show("Failure - CDS");
        });
      },

      _onDoSaveDraft: function (oEvent) {
        if (this.checkUserInput()) {
          this._SaveMsg(oEvent, 1);
        }
      },

      _onDoSaveProcess: function (oEvent) {
        if (this.checkUserInput()) {
          this._SaveMsg(oEvent, 2);
        }
      },

      checkUserInput: function () {
        var vResult = true;

        var vMsgTypeValue = this.byId("ComboMessageType").getSelectedKey();
        var vMsgText = this.byId("MsgTextArea").getValue();
        var bFTypeValide = this._checkFTypeValid();

        if(vMsgTypeValue === 'F' && !bFTypeValide) {
          vResult = false;
          sap.m.MessageToast.show("Заполните описание транспортного контейнера");
          return;
        }

        if(vMsgTypeValue === 'F' && bFTypeValide) {
          return true;
        }

        if (vMsgTypeValue == "" || vMsgTypeValue == " ") {
          vResult = false;
          sap.m.MessageToast.show("Заполните поле Тип обращения");
          return;
        }

        if (vMsgText == "" || vMsgText == " ") {
          vResult = false;
          sap.m.MessageToast.show("Заполните описание обращения");
          return;
        }

        return vResult;
      },

      _checkFTypeValid: function() {
        var aInputsInfo = [
          {
            id: 'ComboMessageType3',
            type: 'Select'
          },
          {
            id: 'FileId',
            type: 'Select'
          },
          {
            id: 'Knd',
            type: 'Select'
          },
          {
            id: 'Repyear',
            type: 'Input'
          },
          {
            id: 'TaxInspectionCode',
            type: 'Input'
          },
          {
            id: 'ContType',
            type: 'Input'
          },
          {
            id: 'DocName',
            type: 'Input'
          },
          {
            id: 'FileName',
            type: 'Input'
          }
        ];

        for(var i = 0; i < aInputsInfo.length; i++) {
          var oInputInfo = aInputsInfo[i];
          var oElement = this.byId(oInputInfo.id);
          var sValue = null;

          if(oInputInfo.type === 'Input') {
            sValue = oElement.getValue();
          }

          if(oInputInfo.type === 'Select') {
            sValue = oElement.getSelectedKey();
          }

          if(!sValue) {
            return false;
          }
        }

        return true;
      },

      //, _onDoSaveSrv: function(oEvent){
      _SaveMsg: function (oEvent, vStatus) {
        var mParameters = {
          headers: {
            "Content-ID": "102",
            "X-CSRF-Token": "Fetch",
          },
          useBatch: false,
        };
        var oModel = new ODataModel(
          "/sap/opu/odata/sap/ZTC_MSGTECH_GTW_SRV/",
          mParameters
        );
        var MessageTypeScr = this.byId("ComboMessageType").getSelectedKey();
        var MsgTx = this.byId("MsgTextArea").getValue();
        var TypeBukrs = this.byId("ComboMessageType3").getSelectedKey();
        var TypeTech = this.byId("ComboMessageType0").getSelectedKey();
        var DclCode = this.byId("ComboMessageType1").getSelectedKey();
        var RepCode = this.byId("ComboMessageType2").getSelectedKey();
        var vFreeText = this.byId("FreeComment").getValue();
        var MsgReason = this.byId("ComboMessageType4").getSelectedKey();
        var FileId = this.byId("FileId").getSelectedKey();
        var Knd = this.byId("Knd").getSelectedKey();
        var Repyear = this.byId("Repyear").getValue();
        var TaxInspectionCode = this.byId("TaxInspectionCode").getValue();
        var ContType = this.byId("ContType").getValue();
        var DocName = this.byId("DocName").getValue();
        var FileName = this.byId("FileName").getValue();

        var oView = this.getView();
        var RequestId = oView.getModel("DetailData").getProperty("/d/RequestId");

        if(MessageTypeScr === "F") {
          DclCode = "";
          RepCode = "";
          TypeTech = "";
          vFreeText = "";
        } else {
          FileId = "";
          Knd = "";
          Repyear = "";
          TaxInspectionCode = "";
          ContType = "";
          DocName = "";
          FileName = "";
        }
        if (MessageTypeScr === "T") {
          DclCode = "";
          RepCode = "";
        }
        if (MessageTypeScr === "M") {
          TypeTech = "";
        }
        // TODO add field to tmp which regard 'F' type
        var tmp = {
          Msgty: MessageTypeScr,
          MessageTx: MsgTx,
          Status: vStatus.toString(),
          DclCode: DclCode,
          RepCode: RepCode,
          FreeComment: vFreeText,
          TypeTech: TypeTech,
          Bukrs: TypeBukrs,
          MsgReason: MsgReason,
          FileId: FileId,
          Knd: Knd,
          Repyear: Repyear,
          TaxInspectionCode: TaxInspectionCode,
          ContType: ContType,
          DocName: DocName,
          FileName: FileName,
          RequestId: RequestId
        };
        oModel.create("/TechMsgShortSet", tmp);

        var that = this;
        this.getModel("CreateMsgHeaderView").setProperty("/busy", true);
        // that._oModelLoc = oModel;
        oModel.attachRequestCompleted(this, function (oEv, Response) {
          if (oEv.getParameters().response.statusCode === 400) {
            var errorMsg = that._getErrorMsgFromResponse(
              oEv.getParameters().response.responseText
            );

            that._newErrorMsg = errorMsg;
            that._onStartUpload(oEv, that);
            sap.m.MessageBox.error(errorMsg.toString(), {
              title: "Error", // default
              styleClass: "", // default
              actions: sap.m.MessageBox.Action.Close, // default
              emphasizedAction: null, // default
              initialFocus: null, // default
              textDirection: sap.ui.core.TextDirection.Inherit, // default
              onClose: function (oAction) {
                that
                  .getModel("CreateMsgHeaderView")
                  .setProperty("/busy", false);
              },
            });
          } else {
            var newMsgId = that._getMsgIdFromResponse(
              oEv.getParameters().response.responseText
            );
            that._newMsgId = newMsgId;
            that._onStartUpload(oEv, that);
            sap.m.MessageToast.show(
              "Сообщение " + newMsgId.toString() + " успешно создано."
            );
          }
          // that._openMsg(newMsgId.toString());
          setTimeout(
            that._UpdateListAndOpenMsg,
            2000,
            newMsgId.toString(),
            that
          );
        });

        oModel.attachRequestFailed(this, function (oEv) {
          sap.m.MessageToast.show("Failure - NewSrv.");
        });
      },
      _getErrorMsgFromResponse: function (iResponseText) {
        var Obj = iResponseText;
        var ObjAttr = Obj.split(",");
        for (var i = 0; i < ObjAttr.length; i++) {
          var ObjAttrSub = ObjAttr[i].toString().split(":");
          if (ObjAttrSub.length === 2) {
            if (ObjAttrSub[0].toString() === '"value"') {
              return ObjAttrSub[1]
                .toString()
                .replace(/"/g, "")
                .replace("}", "")
                .trim();
            }
          }
        }
      },
      _getMsgIdFromResponse: function (iResponseText) {
        var Obj = iResponseText;
        var ObjAttr = Obj.split(",");
        for (var i = 0; i < ObjAttr.length; i++) {
          var ObjAttrSub = ObjAttr[i].toString().split(":");
          if (ObjAttrSub.length === 2) {
            if (ObjAttrSub[0].toString() === '"MessageId"') {
              // alert("MsgId" + ObjAttrSub[1].toString());
              return ObjAttrSub[1].toString().replace(/"/g, "");
            }
          }
        }
      },

      _onStartUpload: function (oEv, ithat) {
        var oUploadCollectionz = ithat.byId("UploadCollection");
        zodataajax.JustUpload(oEv, ithat, oUploadCollectionz);
      },

      onUploadComplete: function () {
        sap.m.MessageToast.show("onUploadComplete");
      },

      onBeforeUploadStarts: function (oEvent) {
        /*
      var oCustomerHeaderSlug = new UploadCollectionParameter({
        name: "slug",
        value: oEvent.getParameter("fileName")
      });
      oEvent.getParameters().addHeaderParameter(oCustomerHeaderSlug);
      */
        sap.m.MessageToast.show("onBeforeUploadStarts");
      },

      _onPositivePress: function (oEvent) {},

      onUploaCollectionChange: function (oEvent) {
        return;
        var oUploadCollection = oEvent.getSource();
        // Header Token
        var oCustomerHeaderToken = new UploadCollectionParameter({
          name: "x-csrf-token",
          value: "securityTokenFromModel",
        });
        oUploadCollection.addHeaderParameter(oCustomerHeaderToken);
      },

      _openMsg: function (iMsgId, ithat) {
        ithat._CreateMsgHeaderViewModel.setProperty("/busy", false);
        var bReplace = (bReplace = true); // !Device.system.phone;
        ithat.getRouter().navTo(
          "object",
          {
            objectId: iMsgId,
          },
          bReplace
        );
      },

      _UpdateListAndOpenMsg: function (iMsgId, ithat) {
        var RefreshParams = {};
        RefreshParams.doNav = false;
        // sap.ui.getCore().byId("Z_MSG_TECH_V1---master").getController().doRefreshOutside(RefreshParams);
        var oControllerMaster = zodataajax.getMasterController();
        oControllerMaster.doRefreshOutside(RefreshParams);
        ithat._openMsg(iMsgId, ithat);
      },

      onSelectTypeChange: function (oEvent) {
        var MsgType = this.byId("ComboMessageType").getSelectedKey();

        if(MsgType !== "F") {
          this.byId("FileId").setSelectedKey("");
          this.byId("Knd").setSelectedKey("");
          this.byId("Repyear").setValue("");
          this.byId("TaxInspectionCode").setValue("");
          this.byId("ContType").setValue("");
          this.byId("DocName").setValue("");
          this.byId("FileName").setValue("");
        }

        if (MsgType == "M") {
          this.byId("FormTypeTaxOblig").setVisible(true);
          this.byId("ReportForm").setVisible(true);
          this.byId("FormTypeTech").setVisible(false);
        } else if(MsgType === "T") {
          this.byId("FormTypeTaxOblig").setVisible(false);
          this.byId("ReportForm").setVisible(false);
          this.byId("FormTypeTech").setVisible(true);
        }
      },

      onSelectFileChange: function(oEvent) {
        var oSource = oEvent.getSouce();
        var oSelectedItem = oSource.getSelectedItem();
        var oBindingContext = oSelectedItem.getBindingContext();
        
        if(oBindingContext) {
          var oProprty = oBindingContext.getProperty();
        }
      },

      onSelectTypeChange1: function (oEvent) {
        this.getModel("CreateMsgHeaderView").setProperty("/busy", true);
        this.byId("ComboMessageType2").setSelectedKey();
        this.getView().setModel(null, "RepListTax");
        var Dclcode = this.byId("ComboMessageType1").getSelectedKey();
        this._fillRepListModel(Dclcode);
        this.getModel("CreateMsgHeaderView").setProperty("/busy", false);
      },

      _fillTypeTechModel: function () {
        var oModelTypeTech = new sap.ui.model.json.JSONModel();
        var vPath2Model =
          "/sap/opu/odata/SAP/ZTC_MSGTECH_GTW_SRV/ZTC_T_TECHMSGTYPSet";
        var oView = this.getView();

        oModelTypeTech.loadData(vPath2Model, "local", true, "GET", true);

        oModelTypeTech.attachRequestCompleted(function () {
          oView.setModel(oModelTypeTech, "typeTECH");
        }, this);
      },

      _fillTypeBukrsModel: function () {
        var oModelTypeBukrs = new sap.ui.model.json.JSONModel();
        var vPath2Model = "/sap/opu/odata/SAP/ZTC_MSGTECH_GTW_SRV/BukrsListSet";
        var oView = this.getView();

        oModelTypeBukrs.loadData(vPath2Model, "local", true, "GET", true);

        oModelTypeBukrs.attachRequestCompleted(function () {
          oView.setModel(oModelTypeBukrs, "typeBukrs");
        }, this);
      },

      _fillNalogTaxModel: function () {
        var oModelNalogTax = new sap.ui.model.json.JSONModel();
        var vPath2Model =
          "/sap/opu/odata/SAP/ZTC_SCAN_DOCUMENT_SRV/ZTC_T_DECLTYPESet";
        var oView = this.getView();

        oModelNalogTax.loadData(vPath2Model, "local", true, "GET", true);

        oModelNalogTax.attachRequestCompleted(function () {
          oView.setModel(oModelNalogTax, "nalogTAX");
        }, this);
      },

      /*   , _fillMsgReasonModel: function(MsgType){

           var oModelMsgReason = new sap.ui.model.json.JSONModel();
           var vPath2Model = "/sap/opu/odata/SAP/ZTC_SCAN_DOCUMENT_SRV/MsgReasonList";
           vPath2Model = vPath2Model + "?msgtype='" + MsgType + "'";
           var oView = this.getView();

           oModelMsgReason.loadData(vPath2Model, "local", true, "GET", true);

           oModelMsgReason.attachRequestCompleted(function() {
               oView.setModel(oModelMsgReason, "MsgReason");
             }, this );

    } */

      _fillRepListModel: function (Dclcode) {
        if (Dclcode !== null && Dclcode !== "" && Dclcode !== " ") {
          var oModelRepListTax = new sap.ui.model.json.JSONModel();
          // var vPath2Model = "/sap/opu/odata/SAP/ZTC_SCAN_DOCUMENT_SRV/ZTC_T_REPLISTSet";
          var vPath2Model =
            "/sap/opu/odata/SAP/ZTC_SCAN_DOCUMENT_SRV/ReplistList";
          vPath2Model = vPath2Model + "?dclcode='" + Dclcode + "'";
          var oView = this.getView();

          oModelRepListTax.loadData(vPath2Model, "local", true, "GET", true);

          oModelRepListTax.attachRequestCompleted(function () {
            oView.setModel(oModelRepListTax, "RepListTax");
          }, this);
        } else {
          var oModelRepListTax = new sap.ui.model.json.JSONModel();
          // var vPath2Model = "/sap/opu/odata/SAP/ZTC_SCAN_DOCUMENT_SRV/ZTC_T_REPLISTSet";
          var vPath2Model =
            "/sap/opu/odata/SAP/ZTC_SCAN_DOCUMENT_SRV/ReplistList";
          var oView = this.getView();

          oModelRepListTax.loadData(vPath2Model, "local", true, "GET", true);

          oModelRepListTax.attachRequestCompleted(function () {
            oView.setModel(oModelRepListTax, "RepListTax");
          }, this);
        }
      },

      filesUploaded: function () {},

      onCreateCancel: function(oEvent) {
        this.byId('ComboMessageType').setSelectedKey('T');
        this.byId('ComboMessageType0').setSelectedKey('');
        this.byId('ComboMessageType4').setSelectedKey('1');
        this.byId('ComboMessageType1').setSelectedKey('');
        this.byId('ComboMessageType2').setSelectedKey('');
        this.byId("FileId").setSelectedKey("");
        this.byId("Knd").setSelectedKey("");
        this.byId("Repyear").setValue("");
        this.byId("TaxInspectionCode").setValue("");
        this.byId("ContType").setValue("");
        this.byId("DocName").setValue("");
        this.byId("FileName").setValue("");
        this.byId('MsgTextArea').setValue('');
        this.onNavBack();
      },

      onUploadButtonPress: function(oEvent) {
        var oUploadCollection = this.byId('UploadCollection');

        if(this._oUploadDialog) {

        } else {
          
        }
      }
    });
  }
);